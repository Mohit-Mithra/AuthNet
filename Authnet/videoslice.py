# -*- coding: utf-8 -*-
"""VideoNinja.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wsj_U_Fm2NQ0kXb6EpoGGLm-9kYRNTGQ

This is a program to slice videos into a defined number of images using OpenCV library
"""

import cv2    #Importing OpenCV library. OpenCV 4.0.1 is the version used
import os     #Importing standard python os lbrary

# This function captures one frame in the video. 
# getFrame(sec,vidcap,sample_type,utterance_counter,image_count):
# sec: argument that controls the starting time for video capture.
# vidcap: variable that stores directory path of video.
# sample_type: variable that stores the path of words in photo directory.
# utterance_counter: variable that keeps track of the utterance that is being accessed.
# image_count: variable that keeps track of the number of images captured.
# test: boolean value to access training or testing folders. test = TRUE for testing.
def getFrame(sec,vidcap,sample_type,utterance_counter,image_count,test):
    
    vidcap.set(cv2.CAP_PROP_POS_MSEC,sec*100)
    hasFrames,image=vidcap.read()
    # condition to store image in photos directory
    if hasFrames:
        #condition to access either testing or training directories
        if (test):
            photo_directory_path = "C:\\Users\\Cerberus\\Test\\photos\\" + "M02"+ "\\" + sample_type+ "\\" +"U_"+str(utterance_counter)+ "\\image"+ str(image_count) +".jpg"
        else:
            photo_directory_path = "C:\\Users\\Cerberus\\photos\\" + "M02"+ "\\" + sample_type+ "\\" +"U_"+str(utterance_counter)+ "\\image"+ str(image_count) +".jpg"
 
        cv2.imwrite(photo_directory_path,image)
    return hasFrames

# This function uses getFrame() function to access all the videos and capture the images in sequence.
# VideoSlicer(path,test):
# path: variable that stores input directory path
# test: boolean value to access training or testing folders. test = TRUE for testing.
def VideoSlicer(path,test):
    InpDir=path # until video
    lInpdir=os.listdir(InpDir) #list folders in path
    personID=lInpdir[1] #access person folder
    personFolder= '%s\\%s'%(InpDir,personID)
    lpersonFolder=os.listdir(personFolder) #list folders in person folder
    for sample_type in lpersonFolder:  #loop to run through one positive and 2 negative samples
        sample_typeFolder='%s\\%s'%(personFolder,sample_type)
        lsample_typeFolder=os.listdir(sample_typeFolder) # list all folders in each sample type
        utterance_counter=1
        for video in lsample_typeFolder:
            #access each video as each utterance
            video_path= '%s\\%s' % (sample_typeFolder,video) 
            vidcap = cv2.VideoCapture(video_path)
            sec=0
            frameRate = 1.2 #variable that controls the number of images taken
            image_count=1
            success=getFrame(sec,vidcap,sample_type,utterance_counter,image_count,test) #calling getFrame()
            while success: #loop to capture defined number of images from video
                image_count = image_count + 1
                sec=sec+ frameRate
                sec = round(sec,2)
                success= getFrame(sec,vidcap,sample_type,utterance_counter,image_count,test)
            utterance_counter = utterance_counter + 1
    return 0
